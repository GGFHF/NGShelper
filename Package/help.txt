**********************************************************************

NGShelper v0.84 - build-allele-frequency.py

Description: This program builds the allele frequency from a VCF file in the format required by SimHyb application.

Usage: build-allele-frequency.py arguments

Arguments:
  -h, --help            show this help message and exit
  --vcf VCF_FILE        Path of input VCF file (mandatory).
  --samples SAMPLE_FILE
                        Path of the sample file in the following record
                        format: "sample_id;species_id;mother_id" (mandatory).
  --sp1_id SP1_ID       Identification of the first species (mandatory)
  --sp2_id SP2_ID       Identification of the second species (mandatory).
  --hyb_id HYBRID_ID    Identification of the hybrid or NONE; default NONE.
  --outdir OUTPUT_DIR   Path of output directoty where files for SimHyb
                        application are saved (mandatory).
  --varnum VARIANT_NUMBER_PER_FILE
                        Variant number per file, the allele frequency data
                        will be splitted in several if the total variant
                        number is greater than this argument; default: 1000.
  --trans ALLELE_TRANSFORMATION
                        Transformation of the allele symbol: ADD100 (add 100
                        to allele symbol when it is numeric) OR ATCG
                        (A->1;T->2;C->3;G->4) or NONE; default: NONE.
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.
  --tvi TVI_LIST        Variant identification list to trace with format
                        seq_id_1-pos_1,seq_id_2-pos_2,...,seq_id_n-pos_n or
                        NONE; default: NONE.

**********************************************************************

NGShelper v0.84 - build-haplotype.py

Description: This program builds the haplotype of a sample set from a VCF file.

Usage: build-haplotype.py arguments

Arguments:
  -h, --help            show this help message and exit
  --vcf INPUT_VCF_FILE  Path of the VCF file (mandatory).
  --samples SAMPLE_FILE
                        Path of the sample file in the following record
                        format: "sample_id;species_id;mother_id" (mandatory).
  --imd_id IMPUTED_MD_ID
                        Identification of the alternative allele for imputed
                        missing data; default 99
  --sp1_id SP1_ID       Identification of the first species (mandatory)
  --sp2_id SP2_ID       Identification of the second species (mandatory).
  --hyb_id HYBRID_ID    Identification of the hybrid or NONE; default NONE.
  --out HAPLOTYPE_FILE  Path of the haplotype file (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.
  --tvi TVI_LIST        Variant identification list to trace with format
                        seq_id_1-pos_1,seq_id_2-pos_2,...,seq_id_n-pos_n or
                        NONE; default: NONE.

**********************************************************************

NGShelper v0.84 - build-interproscan-annotations-stats.py

Description: This program builds statistics of an InterProScan analysis used by/nthe MMSEQ2-benchmarking software.

Usage: build-interproscan-annotations-stats.py arguments

Arguments:
  -h, --help            show this help message and exit
  --analysis ANALYSIS_FILE
                        Path of the InterProScan analysis file (mandatory).
  --annotations ANNOTATIONS_FILE
                        Path of output CSV file with annotations per sequence
                        (mandatory).
  --stats STATS_FILE    Path of output CSV file with statistics or NONE;
                        default: NONE.
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - build-trapid-annotation.py

Description: This program builds functional annotation data corresponding to a TRAPID run.

Usage: build-trapid-annotation.py arguments

Arguments:
  -h, --help            show this help message and exit
  --go TRANSCRIPTS_WITH_GO_FILE
                        Path of transcripts with GO file (mandatory).
  --gf TRANSCRIPTS_WITH_GF_FILE
                        Path of transcripts with GF file (mandatory).
  --ko TRANSCRIPTS_WITH_KO_FILE
                        Path of transcripts with KO file (mandatory).
  --annotation ANNOTATION_FILE
                        Path of annotation file in CSV format (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - calculate-alignment-identity.py

Description: This program calculates the global identity percentage of set of files with alignment of sequences in FASTA format.

Usage: calculate-alignment-identity.py arguments

Arguments:
  -h, --help         show this help message and exit
  --indir INPUT_DIR  Path of the directory where cluster files with alignment
                     of sequences are located(mandatory).
  --pattern PATTERN  Pattern for selecting cluster files with alignment of
                     sequences (mandatory).
  --out OUTPUT_FILE  Path of file where the global identity percentage is
                     saved (mandatory).
  --verbose VERBOSE  Additional job status info during the run: Y (yes) or N
                     (no); default: N.
  --trace TRACE      Additional info useful to the developer team: Y (yes) or
                     N (no); default: N.

**********************************************************************

NGShelper v0.84 - calculate-enrichment-analysis.py

Description: This program calculates the enrichment analysis of GO terms in
a (gymntoTOA, TOA, EnTAP or TRAPID) annotation file and the gymnoTOA database.

Usage: calculate-enrichment-analysis.py arguments

Arguments:
  -h, --help            show this help message and exit
  --db SQLITE_DATABASE  Path of the SQLite database (mandatory).
  --app APP             Application (mandatory): EnTAP-runN or EnTAP-runP or
                        gymnoTOA or TOA or TRAPID.
  --annotations ANNOTATION_FILE
                        Path of annotation file in CSV format (mandatory).
  --species SPECIES_NAME
                        The species name or "all_species" (mandatory).
  --method FDR_METHOD   Method used in FDR calcutation: bh (Benjamini-
                        Hochberg) or by (Benjamini-Yekutieli); default: by.
  --msqannot MIN_SEQNUM_ANNOTATIONS
                        Minimum sequence number in annotation; default: 5.
  --msqspec MIN_SEQNUM_SPECIES
                        Minimum sequence number in species; default: 10.
  --goea GOEA_FILE      Path of the GO term enrichment analysis file
                        (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - calculate-genotype-data.py

Description: This program calculates genotype data: sample genotypes of SNPs, linkage disequilibrium
between each pair of SNPs and sample kinship.

Usage: calculate-genotype-data.py arguments

Arguments:
  -h, --help            show this help message and exit
  --threads THREADS_NUM
                        Number of threads (mandatory).
  --db SQLITE_DATABASE  Path of the SQLite database (mandatory).
  --vcf VCF_FILE        Path of the input VCF file (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.
  --tvi TVI_LIST        Variant identification list to trace with format
                        seq_id_1-pos_1,seq_id_2-pos_2,...,seq_id_n-pos_n or
                        NONE; default: NONE.

**********************************************************************

NGShelper v0.84 - calculate-go-stats.py

Description: This program calculates GO term statistics generated by annotation applications.

Usage: calculate-go-stats.py arguments

Arguments:
  -h, --help            show this help message and exit
  --app APP             Application (mandatory): Blast2GO or EnTAP or TOA or
                        TRAPID or Trinotate.
  --annotation ANNOTATION_FILE
                        Path of annotation file in CSV or TSV format
                        (mandatory).
  --ontology ONTOLOGY_FILE
                        Path of the GO ontology file (mandatory).
  --outdir OUTPUT_DIR   Path of output directoty where GO term statistics
                        saved (mandatory).
  --toasel TOA_GO_SELECTION
                        GO terms seleccion (TOA app): LEV (the lowest e-value
                        -GO data can be empty- is considered) or LEVWD (the
                        lowest e-value with GO data not empty is considered);
                        default: LEVWD.
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - calculate-gymnotoadb-stats.py

Description: This program calculates statistics of the gymnoTOA SQLite database.

Usage: calculate-gymnotoadb-stats.py arguments

Arguments:
  -h, --help            show this help message and exit
  --db SQLITE_DATABASE  Path of the gymnoTOA SQLite database (mandatory).
  --stats STATS_FILE    Path of statistics file (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - calculate-quercustoadb-stats.py

Description: This program calculates statistics of the quercusTOA SQLite database.

Usage: calculate-quercustoadb-stats.py arguments

Arguments:
  -h, --help            show this help message and exit
  --db SQLITE_DATABASE  Path of the quercusTOA SQLite database (mandatory).
  --stats STATS_FILE    Path of the statistics file (mandatory).
  --noannot NOANNOT_FILE
                        Path of the file with sequences without annotations or
                        NONE; default: NONE.
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - characterize-population.py

Description: This program characterizes a population from a VCF file with a single population using
linkage disequilibrium and kinship data).

Usage: characterize-population.py arguments

Arguments:
  -h, --help            show this help message and exit
  --threads THREADS_NUM
                        Number of threads (mandatory).
  --db SQLITE_DATABASE  Path of the SQLite database (mandatory).
  --vcf VCF_FILE        Path of the input VCF file (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.
  --tvi TVI_LIST        Variant identification list to trace with format
                        seq_id_1-pos_1,seq_id_2-pos_2,...,seq_id_n-pos_n or
                        NONE; default: NONE.

**********************************************************************

NGShelper v0.84 - check-imputations.py

Description: This program checks the missing data imputations in a VCF whose missing data were simulated.

Usage: check-imputations.py arguments

Arguments:
  -h, --help            show this help message and exit
  --db SQLITE_DATABASE  Path of the SQLite database (mandatory).
  --chvcffile CH_VCF_FILE
                        Path of the VCF file with imputations to be checked
                        (mandatory).
  --mdvcffile MD_VCF_FILE
                        Path of the VCF file with missing data (mandatory).
  --mapfile IMPUTATIONS_MAP_FILE
                        Path of the CSV file with the imputations map
                        (mandatory).
  --summfile SUMMARY_FILE
                        Path of the CSV file where the summaries of checkings
                        are saved (mandatory).
  --cmfile CONFUSION_MATRIX_FILE
                        Path of CSV file where the confusion matrix is saved
                        (mandatory).
  --expdata EXPERIMENT_DATA
                        Data semicolon-separated to identify the experimient
                        or NONE; default NONE.
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.
  --tsi TSI_LIST        Sequence identification list to trace with format
                        seq_id,seq_id_2,...,seq_id or NONE; default: NONE.

**********************************************************************

NGShelper v0.84 - collapse-vcf-indels.py

Description: This program collapses the variant records corresponding to an indel in a VCF file.

Usage: collapse-vcf-indels.py arguments

Arguments:
  -h, --help            show this help message and exit
  --vcf INPUT_VCF_FILE  Path of input VCF file (mandatory).
  --samples SAMPLE_FILE
                        Path of the sample file in the following record
                        format: "sample_id;species_id;mother_id" (mandatory).
  --imd_id IMPUTED_MD_ID
                        Identification of the alternative allele for imputed
                        missing data; default 99
  --sp1_id SP1_ID       Identification of the first species (mandatory)
  --sp2_id SP2_ID       Identification of the second species (mandatory).
  --hyb_id HYBRID_ID    Identification of the hybrid or NONE; default NONE.
  --out OUTPUT_VCF_FILE
                        Path of output VCF file (mandatory).
  --stats STATS_FILE    Path of statistics file (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.
  --tvi TVI_LIST        Variant identification list to trace with format
                        seq_id_1-pos_1,seq_id_2-pos_2,...,seq_id_n-pos_n or
                        NONE; default: NONE.

**********************************************************************

NGShelper v0.84 - correct-imputation-info.py

Description: This program corrects columns of info data in a summay file yielded by a SOM imputation process.

Usage: correct-imputation-info.py arguments

Arguments:
  -h, --help         show this help message and exit
  --in INPUT_FILE    Path of the input summay file (mandatory).
  --out OUTPUT_FILE  Path of the output summay file (mandatory).
  --verbose VERBOSE  Additional job status info during the run: Y (yes) or N
                     (no); default: N.
  --trace TRACE      Additional info useful to the developer team: Y (yes) or
                     N (no); default: N.

**********************************************************************

NGShelper v0.84 - debase-transcript-sequences.py

Description: This program debases sequences from a transcript FASTA file.

Usage: debase-transcript-sequences.py arguments

Arguments:
  -h, --help            show this help message and exit
  --fasta FASTA_FILE    Path of transcript FASTA file (mandatory)
  --output OUTPUT_FILE  Path of FASTA file with debased sequences (mandatory)
  --fragprob FRAGMENTATION_PROBABILITY
                        Fragmentation probability (0.0 <= fragprob <= 1.0)
                        (mandatory)
  --maxfragnum MAX_FRAGMENT_NUMBER
                        Maximum fragment number (2 <= maxfragnum <= 5)
                        (mandatory)
  --maxshortening MAX_END_SHORTENING
                        Maximum shortening of a fragment end (0 <=
                        maxshortening <= 10) (mandatory)
  --minfraglen MIN_FRAGMENT_LENGTH
                        Minimum fragment length; shorter fragments are not
                        considered (mandatory)
  --mutprob MUTATION_PROBABILITY
                        Mutation probability (0.0 <= mutprob <= 1.0)
                        (mandatory)
  --maxmutnum MAX_MUTATION_NUMBER
                        Maximum mutation number (1 <= maxmutnum <= 10)
                        (mandatory)
  --indelprob INDEL_PROBABILITY
                        Insertion/deletion probability (0.0 <= indelprob <=
                        1.0) (mandatory)
  --maxmutsize MAX_MUTATION_SIZE
                        Maximum mutation size (1 <= maxmutsize <= 30)
                        (mandatory)
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - extract-fasta-seqs.py

Description: This program extracts sequences from a FASTA file.

Usage: extract-fasta-seqs.py arguments

Arguments:
  -h, --help            show this help message and exit
  --fasta FASTA_FILE    Path of FASTA file (mandatory)
  --id ID_FILE          Path of the sequence identification file in plane text
                        (mandatory)
  --type ID_TYPE        Type of the identification: ['LITERAL', 'REGEX'];
                        default: LITERAL.
  --extract EXTRACT_FILE
                        Path of extracted FASTA file (mandatory)
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - extract-gff-features.py

Description: This program extracts genomic features from a GFF file corresponding to the variant of a VCF file.

Usage: extract-gff-features.py arguments

Arguments:
  -h, --help            show this help message and exit
  --gff INPUT_GFF_FILE  Path of the GFF file (mandatory).
  --format GFF_FORMAT   The format of the transcript GFF file: GFF3; default:
                        GFF3.
  --vcf VCF_FILE        Path of the VCF file (mandatory).
  --out OUTPUT_GFF_FILE
                        Path of the output GFF file with the selected features
                        (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - extract-gff-rnas.py

Description: This program extracts RNA sequences from a GFF file and its corresponding genome FASTA file.

Usage: extract-gff-rnas.py arguments

Arguments:
  -h, --help            show this help message and exit
  --gff GFF_FILE        Path of the GFF file (mandatory).
  --format GFF_FORMAT   The format of the transcript GFF file: GFF3; default:
                        GFF3.
  --genome GENOME_FILE  Path of the FASTA genome file (mandatory)
  --out RNA_FILE        Path of the output FASTA file with the RNA sequences
                        in cDNA format (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.
  --tvi TVI_LIST        Genomic sequence identification list to trace with
                        format seq_id_1,seq_id_2,...,seq_id_n or NONE;
                        default: NONE.

**********************************************************************

NGShelper v0.84 - extract-vcf-genotypes.py

Description: This program extracts genotype data of every variant from a VCF file.
compatibility between each mother and its progeny, and imputes missing data of progeny genotypes
according to the selected imputation scenario.

Usage: extract-vcf-genotypes.py arguments

Arguments:
  -h, --help            show this help message and exit
  --vcf INPUT_VCF_FILE  Path of input VCF file (mandatory).
  --imd_id IMPUTED_MD_ID
                        Identification of the alternative allele for imputed
                        missing data; default 99
  --out OUTPUT_GENOTYPE_FILE
                        Path of genotype data file (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.
  --tvi TVI_LIST        Variant identification list to trace with format
                        seq_id_1-pos_1,seq_id_2-pos_2,...,seq_id_n-pos_n or
                        NONE; default: NONE.

**********************************************************************

NGShelper v0.84 - extract-vcf-seqs.py

Description: This program extracts sequences from a VCF file.

Usage: extract-vcf-seqs.py arguments

Arguments:
  -h, --help            show this help message and exit
  --vcf VCF_FILE        Path of input VCF file (mandatory).
  --id ID_FILE          Path of the sequence identification file in plane text
                        (mandatory)
  --extract EXTRACT_FILE
                        Path of extracted VCF file (mandatory)
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - filter-fasta.py

Description: This program filters a FASTA file according to the sequence length.

Usage: filter-fasta.py arguments

Arguments:
  -h, --help            show this help message and exit
  --fasta FASTA_FILE    Path of FASTA file (mandatory)
  --output OUTPUT_FILE  Path of a output file where sequences filtered will be
                        saved.
  --minlen MINLEN       Sequences with length values less than this value will
                        be filtered (default: 200).
  --maxlen MAXLEN       Sequences with length values greater than this value
                        will be filtered (default: 10000).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - filter-ssrs.py

Description: This program filters a SSR file selecting SSRs included in a COS.

Usage: filter-ssrs.py arguments

Arguments:
  -h, --help            show this help message and exit
  --cos COS_FILE        Path of COS file in FASTA format (mandatory)
  --ssr SSR_FILE        Path of SSR file in TSV format (mandatory)
  --output OUTPUT_FILE  Path of a output file where filtered SSRs will be
                        saved.
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - filter-vcf.py

Description: This program filters variants of a VCF file based on genotypes.

Usage: filter-vcf.py arguments

Arguments:
  -h, --help            show this help message and exit
  --threads THREADS_NUM
                        Number of threads (mandatory).
  --action FILTERING_ACTION
                        Filtering acction: MM (variants with all monomorphic
                        individuals); default: MM.
  --vcf INPUT_VCF_FILE  Path of the input VCF file (mandatory).
  --out OUTPUT_VCF_FILE
                        Path of the output VCF file with variants filtered
                        (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.
  --tvi TVI_LIST        Variant identification list to trace with format
                        seq_id_1-pos_1,seq_id_2-pos_2,...,seq_id_n-pos_n or
                        NONE; default: NONE.

**********************************************************************

NGShelper v0.84 - generate-id-files.py

Description: This program generates template files with random sample identifiers for use with VCF files.

Usage: generate-id-files.py arguments

Arguments:
  -h, --help            show this help message and exit
  --sp1_id SP1_ID       Identification of the first species (mandatory)
  --sp1_totinds SP1_TOTAL_INDIVIDUALS
                        Total individuals number of the first species
                        (mandatory)
  --sp1_selinds SP1_SELECTED_INDIVIDUALS
                        Selected individuals number of the first species
                        (mandatory).
  --sp2_id SP2_ID       Identification of the second species or NONE; default
                        NONE.
  --sp2_totinds SP2_TOTAL_INDIVIDUALS
                        Total individuals number of the second species or 0;
                        default 0.
  --sp2_selinds SP2_SELECTED_INDIVIDUALS
                        Selected individuals number of the second species or
                        0; default 0.
  --hyb_id HYBRID_ID    Identification of the hybrid or NONE; default NONE.
  --hyb_totinds HYBRID_TOTAL_INDIVIDUALS
                        Total individuals number of the hybrid or 0; default
                        0.
  --hyb_selinds HYBRID_SELECTED_INDIVIDUALS
                        Selected individuals number of the hybrid (mandatory).
  --outfile1 SAMPLE_ID_FILE_1
                        Path of the sample identification file 1 (mandatory).
  --outfile2 SAMPLE_ID_FILE_2
                        Path of the sample identification file 2 (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - get-exon-data-nochim.py

Description: This program parses a GMAP alignment without considenring chimeras in order to get data about the coverage, identity and coordinates of exons.

Usage: get-exon-data-nochim.py arguments

Arguments:
  -h, --help            show this help message and exit
  --alignment ALIGNMENT_FILE
                        Path of GMAP alignment file (mandatory)
  --outdir OUTPUT_DIR   Path of output directoty where files with exons data
                        are saved (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - get-exon-data-wchim.py

Description: This program parses a GMAP alignment considering chimeras (GMAP options -n 0 -m) in order to get data about the coverage, identity and coordinates of exons.

Usage: get-exon-data-wchim.py arguments

Arguments:
  -h, --help            show this help message and exit
  --alignment ALIGNMENT_FILE
                        Path of GMAP alignment file (mandatory)
  --outdir OUTPUT_DIR   Path of output directoty where files with exons data
                        are saved (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - get-flanking-regions.py

Description: This program builds a FASTA file with the flanking genomic region of variants contained in a VCF file.

Usage: get-flanking-regions.py arguments

Arguments:
  -h, --help            show this help message and exit
  --vcf VCF_FILE        Path of the VCF file (mandatory).
  --genome GENOME_FILE  Path of the FASTA genome file (mandatory)
  --out FLANKING_REGION_FILE
                        Path of the output FASTA file with flanking regions
                        (mandatory).
  --nucleotides NUCLEOTIDE_NUMBER
                        Nucleotide number to get in both sides of each
                        variant; default: 25.
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - get-transcripts-geneid.py

Description: This program gets the gene identification corresponding to transcripts from a GFF file.

Usage: get-transcripts-geneid.py arguments

Arguments:
  -h, --help            show this help message and exit
  --gff GFF_FILE        Path of the GFF file (mandatory).
  --format GFF_FORMAT   The format of the transcript GFF file: GFF3; default:
                        GFF3.
  --out TRANSCRIPTS_GENEID_FILE
                        Path of the file with transcripts gene identifications
                        (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.
  --tvi TVI_LIST        Genomic sequence identification list to trace with
                        format seq_id_1,seq_id_2,...,seq_id_n or NONE;
                        default: NONE.

**********************************************************************

NGShelper v0.84 - impute-adults.py

Description: This program imputes genotypes with missing data of adult individuals in a VCF
file generated in a hybridization studies of two parental species, hybrids and their half-sib
progenies, based on the relative frequencies of missing data in the adults of both parental
species.

Usage: impute-adults.py arguments

Arguments:
  -h, --help            show this help message and exit
  --vcf INPUT_VCF_FILE  Path of input VCF file (mandatory).
  --samples SAMPLE_FILE
                        Path of the sample file in the following record
                        format: "sample_id;species_id;mother_id" (mandatory).
  --fix FIX             Fix the reference base(s) when there are not samples
                        with this reference (mandatory): Y (yes) or N (no).
  --scenario SCENARIO   Scenario (mandatory): 0 (no imputation) or 1
                        (standard) or 2 (maximum possible imputation) or 3
                        (maximum possible missing data).
  --min_aa MIN_AA_PERCENTAGE
                        Minimum percentage of alternative alleles per species
                        (mandatory).
  --min_mdi MIN_MD_IMPUTATION_PERCENTAGE
                        Minimum percentage of missing data imputation to a new
                        alternative allele per species (mandatory).
  --imd_id IMPUTED_MD_ID
                        Identification of the alternative allele for imputed
                        missing data; default 99
  --sp1_id SP1_ID       Identification of the first species (mandatory)
  --sp1_max_md SP1_MAX_MD_PERCENTAGE
                        Maximum percentage of missing data of the first
                        species (mandatory).
  --sp2_id SP2_ID       Identification of the second species (mandatory).
  --sp2_max_md SP2_MAX_MD_PERCENTAGE
                        Maximum percentage of missing data of the second
                        species (mandatory).
  --hyb_id HYBRID_ID    Identification of the hybrid or NONE; default NONE.
  --maf MIN_AFR_PERCENTAGE
                        Minimum percentage of allele frequency per species
                        (mandatory).
  --dp MIN_DEPTH        Minimum combined depth across samples; default: 1.
  --out OUTPUT_VCF_FILE
                        Path of output VCF file (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.
  --tvi TVI_LIST        Variant identification list to trace with format
                        seq_id_1-pos_1,seq_id_2-pos_2,...,seq_id_n-pos_n or
                        NONE; default: NONE.

**********************************************************************

NGShelper v0.84 - impute-md-naive.py

Description: This program imputes genotypes with missing data in a VCF file using a naive process.

Usage: impute-md-naive.py arguments

Arguments:
  -h, --help            show this help message and exit
  --threads THREADS_NUM
                        Number of threads (mandatory).
  --input_vcf INPUT_VCF_FILE
                        Path of the input VCF file (mandatory).
  --output_vcf OUTPUT_VCF_FILE
                        Path of the output VCF file with missing data imputed
                        (mandatory).
  --impdata IMPUTATION_DATA_FILE
                        Path of the output file with imputation data
                        (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.
  --tvi TVI_LIST        Variant identification list to trace with format
                        seq_id_1-pos_1,seq_id_2-pos_2,...,seq_id_n-pos_n or
                        NONE; default: NONE.

**********************************************************************

NGShelper v0.84 - impute-md-random.py

Description: This program imputes genotypes with missing data in a VCF file using a random process.

Usage: impute-md-random.py arguments

Arguments:
  -h, --help            show this help message and exit
  --threads THREADS_NUM
                        Number of threads (mandatory).
  --vcf INPUT_VCF_FILE  Path of the input VCF file (mandatory).
  --out OUTPUT_VCF_FILE
                        Path of the output VCF file with missing data imputed
                        (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.
  --tvi TVI_LIST        Variant identification list to trace with format
                        seq_id_1-pos_1,seq_id_2-pos_2,...,seq_id_n-pos_n or
                        NONE; default: NONE.

**********************************************************************

NGShelper v0.84 - impute-md-som.py

Description: This program imputes genotypes with missing data in a VCF file using Self-Organizing Maps.

Usage: impute-md-som.py arguments

Arguments:
  -h, --help            show this help message and exit
  --threads THREADS_NUM
                        Number of threads (mandatory).
  --db SQLITE_DATABASE  Path of the SQLite database (mandatory).
  --input_vcf INPUT_VCF_FILE
                        Path of the input VCF file (mandatory).
  --output_vcf OUTPUT_VCF_FILE
                        Path of the output VCF file with missing data imputed
                        (mandatory).
  --impdata IMPUTATION_DATA_FILE
                        Path of the output file with imputation data
                        (mandatory).
  --xdim XDIM           X dimension of the SOM (mandatory).
  --ydim YDIM           Y dimension of the SOM (mandatory).
  --sigma SIGMA         Spread of the neighborhood function (mandatory).
  --ilrate LEARNING_RATE
                        Initial learning rate (mandatory).
  --iter NUM_ITERATION  Maximum number of iterations (mandatory).
  --mr2 MINIMUM_R2      Minimum r^2 to select SNPs (mandatory).
  --estimator R_ESTIMATOR
                        Type of estimator: ru (the unweighted average
                        estimator) or rw (the weighted estimator); default:
                        ru.
  --snps SNPS_NUM       Number of SNPs considered among those with r^2 >= mr2
                        (mandatory).
  --gim GENOTYPE_IMPUTATION_METHOD
                        Genotype imputation method: MF (the most frequent
                        genotype) or CK (the genotype of the closest kinship
                        individual); default: MF.
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.
  --tvi TVI_LIST        Variant identification list to trace with format
                        seq_id_1-pos_1,seq_id_2-pos_2,...,seq_id_n-pos_n or
                        NONE; default: NONE.

**********************************************************************

NGShelper v0.84 - impute-progenies.py

Description: This program treats the VCF output file of impute-adults.py, checks the genotype
compatibility between each mother and its progeny, and imputes missing data of progeny genotypes
according to the selected imputation scenario.

Usage: impute-progenies.py arguments

Arguments:
  -h, --help            show this help message and exit
  --vcf INPUT_VCF_FILE  Path of input VCF file (mandatory).
  --samples SAMPLE_FILE
                        Path of the sample file in the following record
                        format: "sample_id;species_id;mother_id" (mandatory).
  --scenario SCENARIO   Scenario (mandatory): 0 (no imputation) or 1
                        (standard) or 2 (maximum possible imputation) or 3
                        (maximum possible missing data).
  --imd_id IMPUTED_MD_ID
                        Identification of the alternative allele for imputed
                        missing data; default 99
  --sp1_id SP1_ID       Identification of the first species (mandatory)
  --sp2_id SP2_ID       Identification of the second species (mandatory).
  --hyb_id HYBRID_ID    Identification of the hybrid or NONE; default NONE.
  --out OUTPUT_VCF_FILE
                        Path of output VCF file (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.
  --tvi TVI_LIST        Variant identification list to trace with format
                        seq_id_1-pos_1,seq_id_2-pos_2,...,seq_id_n-pos_n or
                        NONE; default: NONE.

**********************************************************************

NGShelper v0.84 - launch-phase-processes.py

Description: This program launches several PHASE processes with a input file list.

Usage: launch-phase-processes.py arguments

Arguments:
  -h, --help            show this help message and exit
  --phasedir PHASE_DIR  Path of the directoty of the PHASE application
                        installation (mandatory).
  --processes PROCESSES_NUMBER
                        Number of process to be launched; default: 4.
  --indir INPUT_DIR     Path of the directoty where the PHASE application
                        input files are located (mandatory).
  --outdir OUTPUT_DIR   Path of the directoty where the PHASE application
                        output files are generated (mandatory).
  --iterations ITERATIONS_NUMBER
                        Number of iterations; default: 100.
  --thinning THINNING_INTERVAL
                        Thinning interval; default: 1.
  --burnin BURN_IN      Burn-in; default: 100.
  --otherparams OTHER_PARAMETERS
                        Other parameters (between quotation marks) to be
                        included in the PHASE run or NONE; default: NONE.
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - load-alignments.py

Description: This program loads alignment data into SQLite database.

Usage: load-alignments.py arguments

Arguments:
  -h, --help            show this help message and exit
  --db SQLITE_DATABASE  Path of the SQLite database (mandatory).
  --alignment ALIGNMENT_FILE
                        Path of alignmanet file in CSV format (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - load-annotations.py

Description: This program loads annotation data from a TOA annotation file into SQLite database.

Usage: load-annotations.py arguments

Arguments:
  -h, --help            show this help message and exit
  --db SQLITE_DATABASE  Path of the SQLite database (mandatory).
  --annotation ANNOTATION_FILE
                        Path of the TOA annotation file in CSV format
                        (mandatory).
  --type TOA_FILE_TYPE  Type of the TOA annotation file (mandatory): PLAZA or
                        REFSEQ or NT or NR or MERGER.
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - load-emapper-annotations.py

Description: This program loads eggNOG-mapper annotations into a SQLite database.

Usage: load-emapper-annotations.py arguments

Arguments:
  -h, --help            show this help message and exit
  --db SQLITE_DATABASE  Path of the SQLite database (mandatory).
  --annotations ANNOTATION_FILE
                        Path of the eggNOG-mapper annotation file (mandatory).
  --taxnames TAXNAME_FILE
                        Path of the NCBI taxonomy name file (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - load-gene2accession.py

Description: This program loads the accessions that are related to a GeneID
into a SQLite database.

Usage: load-gene2accession.py arguments

Arguments:
  -h, --help            show this help message and exit
  --db SQLITE_DATABASE  Path of the SQLite database (mandatory).
  --relfile RELATIONSHIP_FILE
                        Path of the relationship file (mandatory).
  --topnode TOP_NODE_TAXID
                        Taxid of the top node whose species are considered
                        (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - load-gene2go.py

Description: This program loads the GO terms that have been associated with genes
into a SQLite database.

Usage: load-gene2go.py arguments

Arguments:
  -h, --help            show this help message and exit
  --db SQLITE_DATABASE  Path of the SQLite database (mandatory).
  --relfile RELATIONSHIP_FILE
                        Path of the relationship file (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - load-gene-info.py

Description: This program loads gene infomation included in a file of ftp://ftp.ncbi.nlm.nih.gov/gene/DATA/GENE_INFO/
into a SQLite database.

Usage: load-gene-info.py arguments

Arguments:
  -h, --help            show this help message and exit
  --db SQLITE_DATABASE  Path of the SQLite database (mandatory).
  --gene GENE_INFO_FILE
                        Path of the gene info file (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - load-gene-ontology.py

Description: This program loads Gene Ontology data into a SQLite database.

Usage: load-gene-ontology.py arguments

Arguments:
  -h, --help            show this help message and exit
  --db SQLITE_DATABASE  Path of the SQLite database (mandatory).
  --ontology ONTOLOGY_FILE
                        Path of the ontology file (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - load-gene-orthologs.py

Description: This program loads relationships of orthologous genes
into a SQLite database.

Usage: load-gene-orthologs.py arguments

Arguments:
  -h, --help            show this help message and exit
  --db SQLITE_DATABASE  Path of the SQLite database (mandatory).
  --relfile RELATIONSHIP_FILE
                        Path of the relationship file (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - load-genomic-features.py

Description: This program loads genomic features from a GFF file into SQLite database.

Usage: load-genomic-features.py arguments

Arguments:
  -h, --help            show this help message and exit
  --db SQLITE_DATABASE  Path of the SQLite database (mandatory).
  --gff GFF_FILE        Path of the GFF file (mandatory).
  --format GFF_FORMAT   The format of the GFF file: GFF3; default: GFF3.
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - load-interproscan-annotations.py

Description: This program loads InterProScan annotations into a SQLite database.

Usage: load-interproscan-annotations.py arguments

Arguments:
  -h, --help            show this help message and exit
  --db SQLITE_DATABASE  Path of the SQLite database (mandatory).
  --annotations ANNOTATION_FILE
                        Path of the InterProScan annotation file (mandatory).
  --stats STATS_FILE    Path of output CSV file with statistics or NONE;
                        default: NONE.
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - load-mmseqs2-relationships.py

Description: This program loads loads the MMSeq2s cluster sequence relationships into a SQLite database.

Usage: load-mmseqs2-relationships.py arguments

Arguments:
  -h, --help            show this help message and exit
  --db SQLITE_DATABASE  Path of the SQLite database (mandatory).
  --relationships RELATIONSHIP_FILE
                        Path of the relationship file between sequence
                        identifications and cluster identifications
                        (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - load-protaccession2taxid.py

Description: This program loads taxid mapping for protein sequences corresponding to a set of species taxids
into a SQLite database.

Usage: load-protaccession2taxid.py arguments

Arguments:
  -h, --help            show this help message and exit
  --db SQLITE_DATABASE  Path of the SQLite database (mandatory).
  --relfile RELATIONSHIP_FILE
                        Path of the relationship file (mandatory).
  --topnode TOP_NODE_TAXID
                        Taxid of the top node whose species are considered
                        (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - load-tair10-orthologs.py

Description: This program loads the TAIR 10 orthologs of a cluster set into a SQLite database.

Usage: load-tair10-orthologs.py arguments

Arguments:
  -h, --help            show this help message and exit
  --db SQLITE_DATABASE  Path of the SQLite database (mandatory).
  --alignments ALIGNMENT_FILE
                        Path of the alignment file (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - load-taxonomy-data.py

Description: This program loads taxanomy infomation downloaded from https://ftp.ncbi.nih.gov/pub/taxonomy/
into a SQLite database.

Usage: load-taxonomy-data.py arguments

Arguments:
  -h, --help            show this help message and exit
  --db SQLITE_DATABASE  Path of the SQLite database (mandatory).
  --nodes TAXONOMY_NODE_FILE
                        Path of the taxonomy nodes file (mandatory).
  --names SPECIES_NAME_FILE
                        Path of the species name file (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - load-vcf-data.py

Description: This program loads data of a VCF file into SQLite database.

Usage: load-vcf-data.py arguments

Arguments:
  -h, --help            show this help message and exit
  --db SQLITE_DATABASE  Path of the SQLite database (mandatory).
  --vcf VCF_FILE        Path of input VCF file (mandatory).
  --samples SAMPLE_FILE
                        Path of the sample file in the following record
                        format: "sample_id;species_id;mother_id" (mandatory).
  --sp1_id SP1_ID       Identification of the first species (mandatory)
  --sp2_id SP2_ID       Identification of the second species (mandatory).
  --hyb_id HYBRID_ID    Identification of the hybrid or NONE; default NONE.
  --new_mdi NEW_MD_ID   New identification of missing data which will replace
                        "."; default: U.
  --imd_id IMPUTED_MD_ID
                        Identification of the alternative allele for imputed
                        missing data; default 99
  --trans ALLELE_TRANSFORMATION
                        Transformation of the allele symbol: ADD100 (add 100
                        to allele symbol when it is numeric) OR ATCG
                        (A->1;T->2;C->3;G->4) or NONE; default: NONE.
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.
  --tvi TVI_LIST        Variant identification list to trace with format
                        seq_id_1-pos_1,seq_id_2-pos_2,...,seq_id_n-pos_n or
                        NONE; default: NONE.

**********************************************************************

NGShelper v0.84 - loci2nexus.py

Description: This program builds a Nexus file from a ypirad loci file
for a determinated loci set to be used by BEAST software.

Usage: loci2nexus.py arguments

Arguments:
  -h, --help            show this help message and exit
  -l SELECTION_LOCI_ID_FILE_PATH, --loci_id_file SELECTION_LOCI_ID_FILE_PATH
                        loci id file path to select (mandatory)
  -c COMPLETE_LOCI_FILE_PATH, --complete_loci_file COMPLETE_LOCI_FILE_PATH
                        complete loci file path (mandatory)
  -s SELECTED_LOCI_FILE_PATH, --selected_loci_file SELECTED_LOCI_FILE_PATH
                        selected loci file path (mandatory)
  -n NEXUS_FILE_PATH, --nexus_file NEXUS_FILE_PATH
                        Nexus file path (mandatory)
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - locistats.py

Description: This program calculates haplotype statistics per locus from a ipyrad loci file.

Usage: locistats.py arguments

Arguments:
  -h, --help            show this help message and exit
  --loci_file LOCI_FILE_PATH
                        loci file path (mandatory)
  --stats_file STATS_FILE_PATH
                        statistics file path in CSV format (mandatory)
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - phase2structure.py

Description: This program converts a output PHASE files to the input Structure format in two lines.

Usage: phase2structure.py arguments

Arguments:
  -h, --help            show this help message and exit
  --phase-indir PHASE_INPUT_DIR
                        Path of the PHASE input file directory (mandatory).
  --phase-outdir PHASE_OUTPUT_DIR
                        Path of the PHASE output file directory (mandatory).
  --samples SAMPLE_FILE
                        Path of the sample file in the following record
                        format: "sample_id;species_id;mother_id" (mandatory).
  --sp1_id SP1_ID       Identification of the first species (mandatory)
  --sp2_id SP2_ID       Identification of the second species (mandatory).
  --hyb_id HYBRID_ID    Identification of the hybrid or NONE; default NONE.
  --max_md MAX_MD_PERCENTAGE
                        Maximum percentage of missing data (mandatory).
  --structure STRUCTURE_FILE
                        Path of the converted Structure file (mandatory).
  --format STRUCTURE_INPUT_FORMAT
                        Structure file format (mandatory): 2 (two lines: one
                        allele in different rows).
  --errors ERROR_FILE   Path of the file with the wrong PHASE file list
                        (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - print-vcf-variants.py

Description: This program prints data of a selected variant list.

Usage: print-vcf-variants.py arguments

Arguments:
  -h, --help            show this help message and exit
  --vcf INPUT_VCF_FILE  Path of input VCF file (mandatory).
  --samples SAMPLE_FILE
                        Path of the sample file in the following record
                        format: "sample_id;species_id;mother_id" (mandatory).
  --sp1_id SP1_ID       Identification of the first species (mandatory)
  --sp2_id SP2_ID       Identification of the second species (mandatory).
  --hyb_id HYBRID_ID    Identification of the hybrid or NONE; default NONE.
  --variants VARIANT_LIST
                        Variant identification list to print with format
                        seq_id_1-pos_1,seq_id_2-pos_2,...,seq_id_n-pos_n.
  --outdir OUTPUT_DIR   Path of output directoty where files with selected
                        variant data are saved (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - purge-structure.py

Description: This program purges a Structure input file.

Usage: purge-structure.py arguments

Arguments:
  -h, --help            show this help message and exit
  --structure INPUT_STRUCTURE_FILE
                        Path of the Structure input file (mandatory).
  --format STRUCTURE_INPUT_FORMAT
                        Structure input format (mandatory): 2 (two lines: one
                        allele in different rows).
  --operation PURGE_OPERATION
                        Purge operation (mandatory): CHAVAL (change a value by
                        a new value) or DELCOL (delete columns containing a
                        determined value).
  --value VALUE         value to operate (mandatory)
  --nvalue NEW_VALUE    new value that replaces value when operation in CHAVAL
                        (mandatory); else NONE (default)
  --out OUTPUT_PURGED_FILE
                        Path of the purged file (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - purge-vcf.py

Description: This program purges a VCF file.

Usage: purge-vcf.py arguments

Arguments:
  -h, --help            show this help message and exit
  --vcf INPUT_VCF_FILE  Path of input VCF file (mandatory).
  --operation PURGE_OPERATION
                        Purge operation (mandatory): CHAVAL (change a value by
                        a new value) or FILVAR (filter variants containing a
                        determined value).
  --value VALUE         value to operate (mandatory)
  --nvalue NEW_VALUE    new value that replaces value when operation in CHAVAR
                        (mandatory); else NONE (default)
  --out OUTPUT_PURGED_FILE
                        Path of the purged file (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - query-data2scenarioX.py

Description: This program lists data of variants and alleles and variant identifications to the scenario X.

Usage: query-data2scenarioX.py arguments

Arguments:
  -h, --help            show this help message and exit
  --db SQLITE_DATABASE  Path of the SQLite database (mandatory).
  --sp1_id SP1_ID       Identification of the first species (mandatory)
  --sp2_id SP2_ID       Identification of the second species (mandatory).
  --hyb_id HYBRID_ID    Identification of the hybrid or NONE; default NONE.
  --imd_id IMPUTED_MD_ID
                        Identification of the alternative allele for imputed
                        missing data; default 99
  --maxsep MAX_SEPARATION
                        Maximum separation between variants of the same
                        intergenic fragment (mandatory).
  --outdir OUTPUT_DIR   Path of output directoty where files with allele data
                        about scenario X are saved (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.
  --tsi TSI_LIST        Sequence identification list to trace with format
                        seq_id,seq_id_2,...,seq_id_n or NONE; default: NONE.

**********************************************************************

NGShelper v0.84 - rebuild-database.py

Description: This program rebuilds a SQLite database.

Usage: rebuild-database.py arguments

Arguments:
  -h, --help            show this help message and exit
  --db SQLITE_DATABASE  Path of the SQLite database (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - recreate-database.py

Description: This program creates a SQLite database or recreates it if exists.

Usage: recreate-database.py arguments

Arguments:
  -h, --help            show this help message and exit
  --db SQLITE_DATABASE  Path of the SQLite database (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - reduce-vcf.py

Description: This program reduces variants from a VCF file.

Usage: reduce-vcf.py arguments

Arguments:
  -h, --help            show this help message and exit
  --vcf INPUT_VCF_FILE  Path of input VCF file (mandatory).
  --method REDUCTION_METHOD
                        Reduction method (mandatory): RANDOM (Reduce randomly
                        variants).
  --remprob REMOVAL_PROBABILITY
                        Removal probability (mandatory)
  --out OUTPUT_VCF_FILE
                        Path of the output VCF file (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - simhyb2structure.py

Description: This program converts a output SimHyb file to the input Structure format in two lines.

Usage: simhyb2structure.py arguments

Arguments:
  -h, --help            show this help message and exit
  --simhyb SIMHYB_FILE  Path of the SimHyb file in TSV format (mandatory).
  --headernum HEADER_ROW_NUMBER
                        Number of the header rows in the SimHyb file
                        (mandatory).
  --structure STRUCTURE_FILE
                        Path of the converted Structure file (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - simNGS-read-fixing.py

Description: This program fixes sequence identifiers of a read file generated by simNGS to compatible format with CASAVA.

Usage: simNGS-read-fixing.py arguments

Arguments:
  -h, --help           show this help message and exit
  --filenum FILENUM    1: in SE file or the first file in PE files; 2: the
                       second file in PE files
  --readfile READFILE  Path of a read file generated by simNGS in FASTQ format

**********************************************************************

NGShelper v0.84 - simulate-md.py

Description: This program simulates missing data in a VCF file.

Usage: simulate-md.py arguments

Arguments:
  -h, --help            show this help message and exit
  --vcf INPUT_VCF_FILE  Path of input VCF file (mandatory).
  --method SIMULATION_METHOD
                        Simulation method (mandatory): RANDOM.
  --mdp MD_PROBABILITY  Probability of a locus having missing data
                        (mandatory).
  --mpiwmd MAXPERC_IND_WMD
                        Maximum percentage of individuals with missing data in
                        each locus (RANDOM method); default: 10.
  --out OUTPUT_VCF_FILE
                        Path of output VCF file (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.
  --tsi TSI_LIST        Sequence identification list to trace with format
                        seq_id,seq_id_2,...,seq_id or NONE; default: NONE.

**********************************************************************

NGShelper v0.84 - split-fasta-file.py

Description: This program splits a FASTA file in several files.

Usage: split-fasta-file.py arguments

Arguments:
  -h, --help            show this help message and exit
  --fasta INPUT_FASTA_FILE
                        Path of the input FASTA file (mandatory).
  --nseq NSEQ_PERFILE   Number of sequences per output file (mandatory).
  --outdir OUTPUT_DIR   Path of the output directory where the files will be
                        saved (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - split-mmseqs2-clusters.py

Description: This program splits a *all_seqs.fasta file yielded by MMseqs2
in several files each containing a sequence cluster.

Usage: split-mmseqs2-clusters.py arguments

Arguments:
  -h, --help            show this help message and exit
  --allseqs ALLSEQS_FILE
                        Path of the *all_seqs.fasta file yielded by MMseqs2
                        (mandatory).
  --relationships RELATIONSHIP_FILE
                        Path of the output file to keep the relationships
                        between sequence identifications and cluster
                        identifications (mandatory).
  --outdir OUTPUT_DIR   Path of the output directory where the files will be
                        saved (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - swap-structure-format.py

Description: This program purges a Structure input file.

Usage: swap-structure-format.py arguments

Arguments:
  -h, --help            show this help message and exit
  --input INPUT_STRUCTURE_FILE
                        Path of the Structure input file (mandatory).
  --out OUTPUT_STRUCTURE_FILE
                        Path of the purged file (mandatory).
  --type SWAP_TYPE      Swap type (mandatory): 2TO1 (two lines to one line).
  --infocols INFO_COL_NUMBER
                        Number of columns with identification data; default:
                        2.
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - tab2vcf.py

Description: This program converts a file in tabular format to a VCF file.

Usage: tab2vcf.py arguments

Arguments:
  -h, --help           show this help message and exit
  --tab TAB_FILE       Path of the input file in tabular format (mandatory).
  --vcf VCF_FILE       Path of the output VCF file (mandatory).
  --mdc MD_CHARACTERS  Characters representing missing data (mandatory).
  --verbose VERBOSE    Additional job status info during the run: Y (yes) or N
                       (no); default: N.
  --trace TRACE        Additional info useful to the developer team: Y (yes)
                       or N (no); default: N.

**********************************************************************

NGShelper v0.84 - transcript-filter.py

Description: This program filters transcripts according to their length, FPKM and TPM calculated by DETONATE.

Usage: transcript-filter.py arguments

options:
  -h, --help            show this help message and exit
  --assembler ASSEMBLY_SOFTWARE_CODE
                        trinity (Trinity) or sdnt (SOAPdenovo-Trans).
  --transcriptome TRANSCRIPTOME_FILE
                        Path of a transcriptome file in FASTA format generated
                        by Trinity.
  --score SCORE_FILE    Path of a score file where DETONATE saved the score of
                        the transcriptome file.
  --output OUTPUT_FILE  Path of a output file where filtered transcripts will
                        be saved.
  --minlen MINLEN       Transcript with length values less than this value
                        will be filtered (default: 200).
  --maxlen MAXLEN       Transcript with length values greater than this value
                        will be filtered (default: 10000).
  --minFPKM MINFPKM     Transcript with FPKM values less than this value will
                        be filtered (default: 1.0).
  --minTPM MINTPM       Transcript with TPM values less than this value will
                        be filtered (default: 1.0).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

Usage: transcriptome-blastx.py [options]

Options:
  -h, --help            show this help message and exit
  -m MACHINE_TYPE, --machine_type=MACHINE_TYPE
                        Machine type: local or ngscloud (default: local)
  -n NODE_NUMBER, --node_number=NODE_NUMBER
                        Node number (default: 1; it must be 1 if machine type
                        is local)
  -t BLASTX_THREAD_NUMBER, --blastx_thread_number=BLASTX_THREAD_NUMBER
                        Threads number using by blastx in every node (default:
                        1)
  -d BLAST_DB, --blast_db=BLAST_DB
                        Path of the protein data base directory
  -p PROTEIN_DATABASE_NAME, --protein_database_name=PROTEIN_DATABASE_NAME
                        Protein database name
  -i TRANSCRIPTOME_FILE, --transcriptome=TRANSCRIPTOME_FILE
                        Path of a transcriptome file in FASTA format
  -e E_VALUE, --e_value=E_VALUE
                        Expectation value (E-value) threshold for saving hits
                        (default: 1e-06)
  -s MAX_TARGET_SEQS, --max_target_seqs=MAX_TARGET_SEQS
                        Maximum number of aligned sequences to keep (default:
                        10)
  -x MAX_HSPS, --max_hsps=MAX_HSPS
                        Maximum number of HSPs per subject sequence to save
                        for each query (default: 999999)
  -c QCOV_HSP_PERC, --qcov_hsp_perc=QCOV_HSP_PERC
                        Aligments below the specified query coverage per HSPs
                        are removed (default: 0.0)
  -o OUTPUT_DIRECTORY, --output=OUTPUT_DIRECTORY
                        Path of a directory where the results will be saved
  -l EMAIL, --email=EMAIL
                        Email direction to send warnings
  -v VERBOSE, --verbose=VERBOSE
                        Additional job status info during the run (y: YES; n:
                        NO, default: N).

**********************************************************************

NGShelper v0.84 - transcriptome-stats.py

Description: This program calculates statistics of a transcriptome.

Usage: transcriptome-stats.py arguments

Arguments:
  -h, --help            show this help message and exit
  --transcriptome TRANSCRIPTOME_FILE
                        Path of a transcriptome file in FASTA format
                        (mandatory)
  --output OUTPUT_DIRECTORY
                        Path of a directory where the results will be saved
                        (mandatory)
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.

**********************************************************************

NGShelper v0.84 - unify-consensus-seqs.py

Description: This program unifies the FASTA files of the consensus sequences of a set of clusters into a single file.

Usage: unify-consensus-seqs.py arguments

Arguments:
  -h, --help         show this help message and exit
  --indir INPUT_DIR  Path of the directory where FASTA files of consensus
                     sequences are located(mandatory).
  --pattern PATTERN  Pattern for selecting FASTA files of consensus sequences
                     (mandatory).
  --out OUTPUT_FILE  Path of FASTA file with unified consensus sequences
                     (mandatory).
  --verbose VERBOSE  Additional job status info during the run: Y (yes) or N
                     (no); default: N.
  --trace TRACE      Additional info useful to the developer team: Y (yes) or
                     N (no); default: N.

**********************************************************************

NGShelper v0.84 - update-vcf-fastphase-analysis.py

Description: This program updates the missing data in a VCF file with the results of a fastPHASE analysis.

Usage: update-vcf-fastphase-analysis.py arguments

Arguments:
  -h, --help            show this help message and exit
  --invcf INPUT_VCF_FILE
                        Path of the VCF file wih missing data (mandatory).
  --outvcf OUTPUT_VCF_FILE
                        Path of the output VCF file with imputed data
                        (mandatory).
  --analdir ANALYSIS_DIR
                        Path of directoty where fastPHASE analysis files are
                        saved (mandatory).
  --prefix PREFIX       Prefix of fastPHASE analysis files (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.
  --tsi TSI_LIST        Sequence identification list to trace with format
                        seq_id,seq_id_2,...,seq_id or NONE; default: NONE.

**********************************************************************

NGShelper v0.84 - update-vcf-mach-analysis.py

Description: This program updates the missing data in a VCF file with the results of an analysis
performed using MACH.

Usage: update-vcf-mach-analysis.py arguments

Arguments:
  -h, --help            show this help message and exit
  --mdvcffile MD_VCF_FILE
                        Path of the VCF file wih missing data (mandatory).
  --impvcffile IMPUTED_VCF_FILE
                        Path of the output VCF file with imputed data
                        (mandatory).
  --analfile ANALYSIS_FILE
                        Path of file with the analysis performed with MACH
                        (mandatory).
  --varfile VARIANT_FILE
                        Path of file with variant list (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.
  --tsi TSI_LIST        Sequence identification list to trace with format
                        seq_id,seq_id_2,...,seq_id or NONE; default: NONE.

**********************************************************************

NGShelper v0.84 - update-vcf-rlib-analysis.py

Description: This program updates the missing data in a VCF file with the results of an analysis
performed using a R library such as bpca, missForest, nipals, nlpca, ppca or svdImpute.
The row of result matrix must layout similar to a VCF file with the format: 
    seq_id \t possition \t genotype-1 \t genotype-2 \t ... \t genotype-n 
The first row must contain the list of sample identifiers separated by the character "\t"

Usage: update-vcf-rlib-analysis.py arguments

Arguments:
  -h, --help            show this help message and exit
  --mdvcffile MD_VCF_FILE
                        Path of the VCF file wih missing data (mandatory).
  --impvcffile IMPUTED_VCF_FILE
                        Path of the output VCF file with imputed data
                        (mandatory).
  --analfile ANALYSIS_FILE
                        Path of result analysis file performed with an R
                        library (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.
  --tsi TSI_LIST        Sequence identification list to trace with format
                        seq_id,seq_id_2,...,seq_id or NONE; default: NONE.

**********************************************************************

NGShelper v0.84 - vcf2fastphase.py

Description: This program converts a VCF file to the fastPHASE input format.

Usage: vcf2fastphase.py arguments

Arguments:
  -h, --help           show this help message and exit
  --vcf VCF_FILE       Path of the VCF file (mandatory).
  --outdir OUTPUT_DIR  Path of output directoty where files for fastPHASE
                       application are saved (mandatory).
  --verbose VERBOSE    Additional job status info during the run: Y (yes) or N
                       (no); default: N.
  --trace TRACE        Additional info useful to the developer team: Y (yes)
                       or N (no); default: N.
  --tsi TSI_LIST       Sequence identification list to trace with format
                       seq_id,seq_id_2,...,seq_id or NONE; default: NONE.

**********************************************************************

NGShelper v0.84 - vcf2mach.py

Description: This program converts a VCF file to files (.dat & .ped) used by MACH.

Usage: vcf2mach.py arguments

Arguments:
  -h, --help           show this help message and exit
  --vcf VCF_FILE       Path of the input VCF file (mandatory).
  --dat DAT_FILE       Path of the output file .dat (mandatory).
  --ped PED_FILE       Path of the output file .ped (mandatory).
  --mdc MD_CHARACTERS  Characters representing missing data (mandatory).
  --verbose VERBOSE    Additional job status info during the run: Y (yes) or N
                       (no); default: N.
  --trace TRACE        Additional info useful to the developer team: Y (yes)
                       or N (no); default: N.
  --tvi TVI_LIST       Variant identification list to trace with format
                       seq_id_1-pos_1,seq_id_2-pos_2,...,seq_id_n-pos_n or
                       NONE; default: NONE.

**********************************************************************

NGShelper v0.84 - vcf2phase.py

Description: This program converts a VCF file to the PHASE input format.

Usage: vcf2phase.py arguments

Arguments:
  -h, --help            show this help message and exit
  --vcf VCF_FILE        Path of the VCF file (mandatory).
  --variants VARIANT_FILE
                        Path of the variant file with record format
                        "seq_id;position;gene_fragment" (mandatory).
  --samples SAMPLE_FILE
                        Path of the sample file with record format
                        "sample_id;species_id;mother_id" (mandatory).
  --sp1_id SP1_ID       Identification of the first species (mandatory)
  --sp2_id SP2_ID       Identification of the second species (mandatory).
  --hyb_id HYBRID_ID    Identification of the hybrid or NONE; default NONE.
  --imd_id IMPUTED_MD_ID
                        Identification of the alternative allele for imputed
                        missing data; default 99
  --outdir OUTPUT_DIR   Path of output directoty where files for PHASE
                        application are saved (mandatory).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.
  --tsi TSI_LIST        Sequence identification list to trace with format
                        seq_id,seq_id_2,...,seq_id or NONE; default: NONE.

**********************************************************************

NGShelper v0.84 - vcf2structure.py

Description: This program converts a VCF file to the Structure input formats.

Usage: vcf2structure.py arguments

Arguments:
  -h, --help            show this help message and exit
  --vcf VCF_FILE        Path of the VCF file (mandatory).
  --samples SAMPLE_FILE
                        Path of the sample file in the following record
                        format: "sample_id;species_id;mother_id" (mandatory).
  --sp1_id SP1_ID       Identification of the first species (mandatory)
  --sp2_id SP2_ID       Identification of the second species (mandatory).
  --hyb_id HYBRID_ID    Identification of the hybrid or NONE; default NONE.
  --imd_id IMPUTED_MD_ID
                        Identification of the alternative allele for imputed
                        missing data; default 99
  --new_mdi NEW_MD_ID   New identification of missing data which will replace
                        "."); default: U.
  --trans ALLELE_TRANSFORMATION
                        Transformation of the allele symbol: ADD100 (add 100
                        to allele symbol when it is numeric) OR ATCG
                        (A->1;T->2;C->3;G->4) or NONE; default: NONE.
  --out OUTPUT_CONVERTED_FILE
                        Path of the converted file (mandatory).
  --format STRUCTURE_INPUT_FORMAT
                        Structure file format (mandatory): 2 (two lines: one
                        allele in different rows).
  --verbose VERBOSE     Additional job status info during the run: Y (yes) or
                        N (no); default: N.
  --trace TRACE         Additional info useful to the developer team: Y (yes)
                        or N (no); default: N.
  --tvi TVI_LIST        Variant identification list to trace with format
                        seq_id_1-pos_1,seq_id_2-pos_2,...,seq_id_n-pos_n or
                        NONE; default: NONE.

**********************************************************************

NGShelper v0.84 - vcf2tab.py

Description: This program converts a VCF file to a file in tabular format.

Usage: vcf2tab.py arguments

Arguments:
  -h, --help           show this help message and exit
  --vcf VCF_FILE       Path of the input VCF file (mandatory).
  --tab TAB_FILE       Path of the output file in tabular format (mandatory).
  --mdc MD_CHARACTERS  Characters representing missing data (mandatory).
  --verbose VERBOSE    Additional job status info during the run: Y (yes) or N
                       (no); default: N.
  --trace TRACE        Additional info useful to the developer team: Y (yes)
                       or N (no); default: N.
  --tvi TVI_LIST       Variant identification list to trace with format
                       seq_id_1-pos_1,seq_id_2-pos_2,...,seq_id_n-pos_n or
                       NONE; default: NONE.

**********************************************************************

